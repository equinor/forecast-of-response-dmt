version: "3.4"

services:
  api:
    build:
      context: ./api
      args:
        DMT_VERSION:-latest: ${DMT_VERSION:-latest}
    restart: unless-stopped
    depends_on:
      - dmss
    environment:
      LOGGING_LEVEL: WARNING
      ENVIRONMENT: local
      DMSS_API: http://dmss:5000
      # Used for callback from Azure Container Job
      PUBLIC_DMSS_API: https://dmss-forecast-of-response-test.radix.equinor.com
#      SCHEDULER_REDIS_PASSWORD: ${SCHEDULER_REDIS_PASSWORD}
      SCHEDULER_ENVS_TO_EXPORT: "PUBLIC_DMSS_API,SIMA_LICENSE"
      SCHEDULER_REDIS_HOST: job-store
      SCHEDULER_REDIS_PORT: 6379
      SCHEDULER_REDIS_SSL: "false"
      AZURE_JOB_SUBSCRIPTION: 93b83577-619d-4fb9-bfdf-f7a07d24cfbe
      AZURE_JOB_RESOURCE_GROUP: S059-Forecast-of-response
      AZURE_SP_SECRET: ${AZURE_SP_SECRET}
      AZURE_JOB_TENANT_ID: 3aa4a235-b6e2-48d5-9195-7fcf05b459b0
      AZURE_JOB_CLIENT_ID: ee7dbf49-e358-4c9c-a7e4-fb6d56c02205
#      SIMA_LICENSE: |
# $(cat ./sima.lic)
    volumes:
      - ./api/home/:/code/home

  job-store:
    image: redis:6.2.5-alpine

  web:
    build:
      context: ./web
      target: development
      args:
        DMT_VERSION:-latest: ${DMT_VERSION:-latest}
        REDIRECT_URI: http://localhost:9000/
        AUTH_ENABLED: 1
        AUTH_SCOPE: api://ee7dbf49-e358-4c9c-a7e4-fb6d56c02205/FoR_test_scope
        CLIENT_ID: ee7dbf49-e358-4c9c-a7e4-fb6d56c02205
    stdin_open: true
    restart: unless-stopped
    volumes:
      - ./web/custom-plugins/:/code/custom-plugins
      - ./web/config.js:/code/app/config.js
      - ./web/actions.js:/code/app/actions.js

  db:
    image: mongo:3.4
    command: --quiet
    restart: unless-stopped
    volumes:
      - ./data:/data/db

    environment:
      MONGO_INITDB_ROOT_USERNAME: maf
      MONGO_INITDB_ROOT_PASSWORD: maf

  dmss:
    image: mariner.azurecr.io/dmss:${DMSS_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - ./dmss-system.local.json:/code/home/system/data_sources/system.json
    environment:
      MONGO_AZURE_URI: ${MONGO_AZURE_URI}
      SECRET_KEY: ${SECRET_KEY}
      LOGGING_LEVEL: "warning"
      ENVIRONMENT: local
#      AUTH_ENABLED: "True"
      AUTH_ENABLED: "False"
      OAUTH_TOKEN_ENDPOINT: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/v2.0/token #http://localhost:8080/auth/realms/dmss/protocol/openid-connect/token
      OAUTH_AUTH_ENDPOINT: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/oauth2/v2.0/authorize # http://localhost:8080/auth/realms/dmss/protocol/openid-connect/auth
      OAUTH_WELL_KNOWN: https://login.microsoftonline.com/3aa4a235-b6e2-48d5-9195-7fcf05b459b0/v2.0/.well-known/openid-configuration # http://localhost:8080/auth/realms/dmss/.well-known/openid-configuration
      OAUTH_AUDIENCE: ee7dbf49-e358-4c9c-a7e4-fb6d56c02205 #if using azure ad, audience is the azure client id
      MONGO_INITDB_ROOT_USERNAME: maf
      MONGO_INITDB_ROOT_PASSWORD: maf
    depends_on:
      - db
    ports:
      - "5010:5000"

  nginx:
    links:
      - web
      - api
    depends_on:
      - api
      - web
    image: mariner.azurecr.io/dmt/nginx:${DMT_VERSION:-latest}
    ports:
      - "9000:8080"

  db-ui:
    image: mongo-express:0.49
    restart: unless-stopped
    ports:
      - "8090:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ADMINUSERNAME: maf
      ME_CONFIG_MONGODB_ADMINPASSWORD: maf
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
